date,arxiv_num,title,authors,categories,comments,abstract,networked,multi agent reinforcement learning ,sampling,keyword count
arXiv:2507.15283,\\,Event-Triggered Resilient Consensus of Networked Euler-Lagrange Syst=ems  Under Byzantine Attacks,"Yuliang Fu, Guanghui Wen, Dan Zhao, Wei Xing Zheng, Xiaolei Li",math.OC cs.SY eess.SY,"11 pages, 16 figures MSC-class: 93D20(Primary), 93D09(Secondary) DOI: 10.1109/TAC.2025.3582531 ","  The resilient consensus problem is investigated in this paper for a class=  of networked Euler-Lagrange systems with event-triggered communication in the presence of Byzantine attacks. One challenge that we face in addressing the considered problem is the inapplicability of existing resilient decision algorithms designed for one-dimensional multi-agent systems. This is because the networked Euler-Lagrange systems fall into the category of multi-dimensional multi-agent systems with coupling among state vector components. To address this problem, we propose a new resilient decision algorithm. This algorithm constructs auxiliary variables related to the coordinative objectives for each normal agent, and transforms the considered resilient consensus problem into the consensus problem of the designed auxiliary variables. Furthermore, to relax the constraints imposed on Byzan= tine agent behavior patterns within continuous-time scenarios, the event-trigger= ed communication scheme is adopted. Finally, the effectiveness of the proposed algorithm is demonstrated through case studies. ",2.0,0.0,0.0,1
arXiv:2507.15806,\\,Power-Constrained Policy Gradient Methods for LQR,"Ashwin Verma, Aritra Mitra, Lintao Ye, Vijay Gupta",math.OC,"8 pages, 0 figures ","  Consider a discrete-time Linear Quadratic Regulator (LQR) problem solved using policy gradient descent when the system matrices are unknown. The gradient is transmitted across a noisy channel over a finite time horizon u= sing analog communication by a transmitter with an average power constraint. Thi= s is a simple setup at the intersection of reinforcement learning and networked control systems. We first consider a communication-constrained optimization framework, where gradient descent is applied to optimize a non-convex funct= ion under noisy gradient transmission. We provide an optimal power allocation algorithm that minimizes an upper bound on the expected optimality error at=  the final iteration and show that adaptive power allocation can lead to better convergence rate as compared to standard gradient descent with uniform power distribution. We then apply our results to the LQR setting. ",1.0,0.0,0.0,1
arXiv:2507.14746 (*cross-list,\\,Sampling from Gaussian Processes: A Tutorial and Applications in Glo=bal  Sensitivity Analysis and Optimization,"Bach Do, Nafeezat A. Ajenifuja, Taiwo A. Adebiyi, Ruda Zhang",cs.LG math.OC stat.AP stat.ML,0,"  High-fidelity simulations and physical experiments are essential for engineering analysis and design. However, their high cost often limits their applications in two critical tasks: global sensitivity analysis (GSA) and optimization. This limitation motivates the common use of Gaussian processes (GPs) as proxy regression models to provide uncertainty-aware predictions b= ased on a limited number of high-quality observations. GPs naturally enable efficient sampling strategies that support informed decision-making under uncertainty by extracting information from a subset of possible functions f= or the model of interest. Despite their popularity in machine learning and statistics communities, sampling from GPs has received little attention in = the community of engineering optimization. In this paper, we present the formulation and detailed implementation of two notable sampling methods -- random Fourier features and pathwise conditioning -- for generating posteri= or samples from GPs. Alternative approaches are briefly described. Importantly= , we detail how the generated samples can be applied in GSA, single-objective optimization, and multi-objective optimization. We show successful applicat= ions of these sampling methods through a series of numerical examples. ",0.0,0.0,2.0,1
